@page "/Mua/Details/{id:int}"
@model Mirrorly.Pages.Mua.DetailsModel
@using Mirrorly.Models;

@{
    ViewData["Title"] = "Chi tiết thợ trang điểm";
}
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<style>

    .profile-container {
        max-width: 1000px;
        margin: auto;
        padding: 30px;
        font-family: 'Segoe UI', sans-serif;
        color: #333;
    }

    .profile-section {
        margin-bottom: 40px;
    }

        .profile-section h2 {
            font-size: 22px;
            margin-bottom: 20px;
            color: #db2777;
            border-bottom: 2px solid #fbcfe8;
            padding-bottom: 6px;
        }

    /* Grid + card */
    .services-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
        gap: 20px;
    }

    .service-card {
        position: relative;
        background: #fff;
        border: 1px solid #fbcfe8;
        border-radius: 16px;
        padding: 20px 20px 70px; /* chừa chỗ cho nút */
        box-shadow: 0 4px 10px rgba(0,0,0,0.05);
        transition: transform 0.2s;
        min-height: 220px;
        overflow: hidden;
    }

        .service-card:hover {
            transform: translateY(-5px);
        }

        .service-card h3 {
            margin: 0 0 10px;
            color: #be185d;
        }

    /* mô tả */
    .description-wrapper {
        margin-bottom: 8px;
    }

    .description {
        color: #444;
        font-size: 14px;
        line-height: 1.5;
        margin: 0 0 6px;
        transition: all 0.25s ease;
    }

    .full-desc.hidden {
        display: none;
    }

    /* nút Xem thêm */
    .toggle-desc {
        display: inline-block;
        margin-top: 4px;
        color: #db2777;
        font-weight: 600;
        cursor: pointer;
        text-decoration: none;
    }

        .toggle-desc:hover {
            color: #be185d;
            text-decoration: underline;
        }

    /* thông tin */
    .price {
        font-weight: bold;
        color: #db2777;
        margin-top: 6px;
    }

    .duration, .category {
        font-size: 13px;
        color: #555;
    }

    /* nút đặt lịch trên từng thẻ */
    .book-btn {
        position: absolute;
        bottom: 15px;
        right: 20px;
        background: #db2777;
        color: #fff;
        padding: 10px 16px;
        border-radius: 25px;
        font-size: 14px;
        font-weight: 600;
        text-decoration: none;
        box-shadow: 0 3px 8px rgba(219, 39, 119, 0.3);
        transition: background 0.2s ease-in-out, transform 0.12s;
    }

        .book-btn:hover {
            background: #be185d;
            transform: translateY(-2px);
        }

    /* tiện ích */
    .hidden {
        display: none;
    }

    /* Reviews */
    .reviews-list {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .review-card {
        background: #fff0f6;
        border: 1px solid #fbcfe8;
        border-radius: 12px;
        padding: 15px;
    }

    .review-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 8px;
        font-weight: 600;
    }

    .review-card .rating {
        color: #f59e0b;
    }

    .review-form {
        margin-top: 20px;
        padding: 20px;
        border: 1px solid #eee;
        border-radius: 12px;
        background: #fafafa;
        box-shadow: 0 2px 6px rgba(0,0,0,0.05);
        font-family: 'Segoe UI', sans-serif;
    }

        .review-form .form-group {
            margin-bottom: 15px;
        }

        .review-form label {
            font-weight: 600;
            display: block;
            margin-bottom: 6px;
            color: #333;
        }

        .review-form .form-control {
            width: 100%;
            padding: 10px 12px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 14px;
        }

        .review-form textarea {
            resize: vertical;
        }

    .btn-submit {
        background: #db2777;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        font-size: 15px;
        cursor: pointer;
        transition: background 0.2s ease-in-out;
    }

        .btn-submit:hover {
            background: #be185d;
        }

    .services-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
        gap: 20px;
        padding: 20px;
    }

    .service-card {
        background: #fff;
        border-radius: 16px;
        box-shadow: 0 4px 12px rgba(255, 105, 180, 0.15);
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        text-align: center;
    }

        .service-card:hover {
            transform: translateY(-6px);
            box-shadow: 0 8px 20px rgba(255, 105, 180, 0.25);
        }

    .service-image {
        width: 100%;
        height: 180px;
        object-fit: cover;
        border-bottom: 3px solid #ffb6c1;
    }

    .book-btn {
        display: inline-block;
        margin-top: 10px;
        background: linear-gradient(90deg, #ff7eb9, #ff65a3);
        color: white;
        padding: 8px 18px;
        border-radius: 20px;
        text-decoration: none;
        transition: background 0.3s;
    }

        .book-btn:hover {
            background: linear-gradient(90deg, #ff65a3, #ff7eb9);
        }

</style>

<div class="profile-container">
    <!-- Services -->
    <section class="profile-section">
        <h2>Dịch vụ cung cấp</h2>
        <div class="services-grid">
            @if (Model.Services != null){
            foreach (var se in Model.Services)
            {
                var desc = se.Description ?? "";
                var words = desc.Split(new[] { ' ', '\t', '\n', '\r' }, StringSplitOptions.RemoveEmptyEntries);
                var limit = 40; 
                var isLong = words.Length > limit;
                var shortDesc = isLong ? string.Join(" ", words.Take(limit)) + "..." : desc;
                    var imagePath = $"/uploads/services/service_{se.ServiceId}.jpg";
                    var defaultImage = "/uploads/default-service.jpg";

                <div class="service-card">
                    <h3>@se.Name</h3>

                    <div class="description-wrapper">                       
                        <p class="description short-desc" id="short-@se.ServiceId">@shortDesc</p>                        
                        @if (isLong)
                        {
                            <p class="description full-desc hidden" id="full-@se.ServiceId">@desc</p>
                            <a href="javascript:void(0);" class="toggle-desc" onclick="toggleDesc(@se.ServiceId, this)">Xem thêm</a>
                        }
                    </div>

                    <p class="price">@se.BasePrice @se.Currency</p>
                    <p class="duration">⏱ @se.DurationMin phút</p>
                    <p class="category">📂 @se.Category?.CategoryName</p>
                    <a href="/Books/Books/@se.ServiceId" class="book-btn">Đặt lịch ngay</a>
                </div>
            }
            } else {
                <p>Không có dịch vụ nào được cung cấp.</p>
            }
        </div>
    </section>

    <!-- Reviews -->
    <section class="profile-section">
        <h2>Đánh giá từ khách hàng</h2>
        <div class="reviews-list">
            @if (Model.Reviews == null || !Model.Reviews.Any())
            {
                <p>Chưa có đánh giá nào.</p>
            } else {
            foreach (var review in Model.Reviews)
            {
                <h3>Đánh giá của @Model.Service?.Name</h3>
                <div class="review-card">
                    <div class="review-header">
                        <strong>@review.Customer.DisplayName</strong>
                        <span class="rating">⭐ @review.Rating</span>
                    </div>
                    <p>@review.Comment</p>
                    <small>@review.CreatedAt.ToString("f")</small>
                </div>
            }
            }
        </div>
    </section>
    <!-- Form viết review -->
    <form method="post" asp-page-handler="AddReview" asp-route-id="@Model.MuaProfile?.Muaid" class="review-form">
        <h3>Viết đánh giá của bạn</h3>

        <div class="form-group">
            <label for="rating">Đánh giá sao</label>
            <select id="rating" name="NewReview.Rating" class="form-control" required>
                <option value="">-- Chọn số sao --</option>
                <option value="1">⭐ 1 sao</option>
                <option value="2">⭐⭐ 2 sao</option>
                <option value="3">⭐⭐⭐ 3 sao</option>
                <option value="4">⭐⭐⭐⭐ 4 sao</option>
                <option value="5">⭐⭐⭐⭐⭐ 5 sao</option>
            </select>
        </div>

        <div class="form-group">
            <label for="comment">Nhận xét của bạn</label>
            <textarea id="comment" name="NewReview.Comment" class="form-control" rows="3" required></textarea>
        </div>

        <button type="submit" class="btn-submit">Gửi đánh giá</button>
    </form>
    <!-- Map Section -->
    <input type="hidden" id="address" value="@Model.MuaProfile?.AddressLine" />

    <div id="map" style="width:100%; height:400px;"></div>

    <script>
        var address = document.getElementById("address").value;
        fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`)
            .then(res => res.json())
            .then(data => {
                if (data && data.length > 0) {
                    var lat = data[0].lat;
                    var lng = data[0].lon;

                    var map = L.map('map').setView([lat, lng], 13);

                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        maxZoom: 19,
                        attribution: '&copy; OpenStreetMap contributors'
                    }).addTo(map);

                    L.marker([lat, lng]).addTo(map)
                        .bindPopup(address)
                        .openPopup();
                } else {
                    alert("Không tìm thấy địa chỉ: " + address);
                }
            });
                // Toggle mô tả theo serviceId
        function toggleDesc(serviceId, linkElem) {
            var shortEl = document.getElementById("short-" + serviceId);
            var fullEl = document.getElementById("full-" + serviceId);

            if (!shortEl || !fullEl) return;

            if (fullEl.classList.contains("hidden")) {
                shortEl.classList.add("hidden");
                fullEl.classList.remove("hidden");
                linkElem.textContent = "Thu gọn";
                linkElem.setAttribute("aria-expanded", "true");
            } else {
                shortEl.classList.remove("hidden");
                fullEl.classList.add("hidden");
                linkElem.textContent = "Xem thêm";
                linkElem.setAttribute("aria-expanded", "false");
            }
        }
    </script>

</div>
