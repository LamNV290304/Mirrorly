@page
@model Mirrorly.Pages.Mua.MuaProfilesModel
@using Mirrorly.Models;

<p>Explore our talented Makeup Artists (MUAs) and their stunning portfolios. Use the search and filters to find the perfect match.</p>

<body>
    <!-- Search + Filters -->
    <div class="filter-bar">
        <input type="text" id="searchInput" placeholder="Search by name or bio..." onkeyup="filterMua()" />

        <select id="areaFilter" onchange="filterMua()">
            <option value="">All Areas</option>
            @foreach (var area in Model.MuaProfiles.Select(m => m.AddressLine).Distinct())
            {
                <option value="@area">@area</option>
            }
        </select>

        <select id="priceFilter" onchange="filterMua()">
            <option value="">All Prices</option>
            <option value="low">Under $50</option>
            <option value="mid">$50 - $100</option>
            <option value="high">Over $100</option>
        </select>

        <select id="ratingFilter" onchange="filterMua()">
            <option value="">All Ratings</option>
            <option value="5">5 Stars</option>
            <option value="4">4+ Stars</option>
            <option value="3">3+ Stars</option>
        </select>

        <select id="experienceFilter" onchange="filterMua()">
            <option value="">All Experience</option>
            <option value="1">1+ years</option>
            <option value="3">3+ years</option>
            <option value="5">5+ years</option>
            <option value="10">10+ years</option>
        </select>
    </div>

    <div class="row" id="muaContainer">
        @foreach (var mua in Model.MuaProfiles)
        {
            var avgPrice = (mua.Services != null && mua.Services.Any()) ? mua.Services.Average(s => s.BasePrice) : 0;
            var avgRating = (mua.Reviews != null && mua.Reviews.Any()) ? mua.Reviews.Average(r => r.Rating) : 0;

            <div class="mua-profile-card"
                 data-area="@mua.AddressLine"
                 data-name="@mua.DisplayName"
                 data-bio="@mua.Bio"
                 data-price="@avgPrice"
                 data-rating="@avgRating"
                 data-experience="@mua.ExperienceYears">
                <h3>@mua.DisplayName</h3>
                <p class="bio">@mua.Bio</p>

                <ul class="mua-info">
                    <li><strong>Area:</strong> @mua.AddressLine</li>
                    <li><strong>Experience:</strong> @mua.ExperienceYears years</li>
                    <li><strong>Price:</strong> @(avgPrice > 0 ? "$" + avgPrice.ToString("0.0") : "N/A")</li>
                    <li><strong>Rating:</strong> @(avgRating > 0 ? avgRating.ToString("0.0") : "N/A") ⭐</li>
                    <li><strong>Public:</strong> @(mua.ProfilePublic ? "Yes" : "No")</li>
                </ul>

                <div class="card-actions">
                    <a href="/Mua/Details/@mua.Muaid" class="btn-view">View Profile</a>
                </div>
            </div>
        }
    </div>
</body>

<style>
    body {
        background: #fff0f6;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: #6d214f;
        margin: 0;
        padding: 20px;
    }

    p {
        font-size: 16px;
        margin-bottom: 20px;
        color: #880e4f;
        text-align: center;
    }

    /* Filter bar */
    .filter-bar {
        margin-bottom: 20px;
        display: flex;
        flex-wrap: wrap;
        gap: 12px;
        justify-content: center;
    }

        .filter-bar input,
        .filter-bar select {
            padding: 10px 14px;
            border: 1px solid #f8bbd0;
            border-radius: 25px;
            font-size: 14px;
            outline: none;
            transition: 0.25s;
        }

        .filter-bar input {
            width: 200px;
        }

            .filter-bar input:focus,
            .filter-bar select:focus {
                border-color: #f48fb1;
                box-shadow: 0 0 8px rgba(248, 187, 208, 0.4);
            }

    /* Layout cards */
    .row {
        display: flex;
        flex-wrap: wrap;
        gap: 24px;
        justify-content: center;
    }

    .mua-profile-card {
        background: #ffffff;
        border: 1px solid #f8bbd0;
        border-radius: 20px;
        box-shadow: 0 6px 16px rgba(248, 187, 208, 0.25);
        padding: 20px;
        min-width: 280px;
        max-width: 360px;
        flex: 1 1 280px;
        transition: transform 0.25s, box-shadow 0.25s;
    }

        .mua-profile-card:hover {
            transform: translateY(-6px);
            box-shadow: 0 8px 24px rgba(248, 187, 208, 0.4);
        }

        .mua-profile-card h3 {
            margin: 0 0 10px;
            font-size: 20px;
            color: #ad1457;
            text-align: center;
        }

        .mua-profile-card .bio {
            font-size: 14px;
            color: #6d214f;
            margin-bottom: 15px;
            text-align: center;
        }

    .mua-info {
        list-style: none;
        padding: 0;
        margin: 0 0 15px;
        font-size: 14px;
    }

        .mua-info li {
            padding: 6px 0;
            border-bottom: 1px solid #f8bbd0;
        }

            .mua-info li:last-child {
                border-bottom: none;
            }

    .card-actions {
        text-align: center;
    }

    .btn-view {
        display: inline-block;
        padding: 10px 20px;
        background: #f48fb1;
        color: #fff;
        text-decoration: none;
        font-weight: 600;
        border-radius: 25px;
        transition: background 0.25s, transform 0.2s;
    }

        .btn-view:hover {
            background: #ec407a;
            transform: scale(1.07);
        }
</style>

<script>
    function filterMua() {
        const input = document.getElementById("searchInput").value.toLowerCase();
        const selectedArea = document.getElementById("areaFilter").value.toLowerCase();
        const selectedPrice = document.getElementById("priceFilter").value;
        const selectedRating = document.getElementById("ratingFilter").value;
        const selectedExperience = document.getElementById("experienceFilter").value;
        const cards = document.querySelectorAll(".mua-profile-card");

        cards.forEach(card => {
            const name = card.getAttribute("data-name")?.toLowerCase() || "";
            const bio = card.getAttribute("data-bio")?.toLowerCase() || "";
            const area = card.getAttribute("data-area")?.toLowerCase() || "";
            const price = parseFloat(card.getAttribute("data-price")) || 0;
            const rating = parseFloat(card.getAttribute("data-rating")) || 0;
            const experience = parseInt(card.getAttribute("data-experience")) || 0;

            const matchSearch = !input || name.includes(input) || bio.includes(input);
            const matchArea = !selectedArea || area === selectedArea;

            let matchPrice = true;
            if (selectedPrice === "low") matchPrice = price < 50;
            else if (selectedPrice === "mid") matchPrice = price >= 50 && price <= 100;
            else if (selectedPrice === "high") matchPrice = price > 100;

            let matchRating = true;
            if (selectedRating) matchRating = rating >= parseInt(selectedRating);

            let matchExperience = true;
            if (selectedExperience) matchExperience = experience >= parseInt(selectedExperience);

            card.style.display = (matchSearch && matchArea && matchPrice && matchRating && matchExperience) ? "block" : "none";
        });
    }
</script>
