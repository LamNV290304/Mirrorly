<!-- Pages/Shared/_Header.cshtml - Updated with Auth -->
@{
    var userId = Context.Session.GetInt32("UserId");
    var username = Context.Session.GetString("Username");
    var avatarUrl = Context.Session.GetString("AvatarUrl");
    var roleId = Context.Session.GetInt32("RoleId");
    var isLoggedIn = userId.HasValue;
    var isMUA = roleId == 2;
    var isCustomer = roleId == 1;
    var isAdmin = roleId == 3;

    // Check verification status for MUA
    var isVerified = false;
    if (isMUA && userId.HasValue)
    {
        // This should be loaded from a service in production
        // For now, using ViewData or you can inject service here
        isVerified = ViewData["IsVerified"] as bool? ?? false;
    }
}
<link href="https://fonts.googleapis.com/css2?family=Metamorphous&display=swap" rel="stylesheet">

<style>
    header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 30px;
        background: linear-gradient(135deg, #fdf2f8 0%, #fff0f6 100%);
        border-bottom: 2px solid #fbcfe8;
        box-shadow: 0 2px 10px rgba(248, 187, 208, 0.1);
    }

    .logo {
        font-size: 28px;
        font-weight: 700;
        color: #db2777;
        text-decoration: none;
        letter-spacing: -1px;
    }

    nav {
        display: flex;
        gap: 30px;
        align-items: center;
    }

        nav a {
            text-decoration: none;
            color: #be185d;
            font-weight: 600;
            font-size: 16px;
            padding: 10px 16px;
            border-radius: 8px;
            transition: all 0.2s ease;
            position: relative;
        }

            nav a:hover {
                background: rgba(219, 39, 119, 0.1);
                color: #db2777;
            }

            nav a.active {
                background: #db2777;
                color: white;
            }

    .right {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .search-box input {
        padding: 8px 16px;
        border: 1px solid #f8bbd0;
        border-radius: 20px;
        outline: none;
        font-size: 14px;
        width: 250px;
        transition: all 0.2s;
    }

        .search-box input:focus {
            border-color: #db2777;
            box-shadow: 0 0 8px rgba(219, 39, 119, 0.2);
        }

    .user-menu {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .user-info {
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 8px 16px;
        background: white;
        border: 1px solid #f8bbd0;
        border-radius: 25px;
        color: #be185d;
        font-weight: 500;
    }

    .avatar {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background: linear-gradient(135deg, #db2777, #f472b6);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 600;
        font-size: 14px;
    }

    .auth-links {
        display: flex;
        gap: 10px;
    }

        .auth-links a {
            padding: 8px 20px;
            text-decoration: none;
            border-radius: 20px;
            font-weight: 600;
            transition: all 0.2s;
        }

    .btn-login {
        color: #db2777;
        border: 1px solid #db2777;
        background: transparent;
    }

        .btn-login:hover {
            background: #db2777;
            color: white;
        }

    .btn-register {
        color: #db2777;
        border: 1px solid #db2777;
        background: transparent;
    }

        .btn-register:hover {
            background: #be185d;
            border-color: #be185d;
        }

    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        right: 0;
        background-color: white;
        min-width: 200px;
        box-shadow: 0 8px 16px rgba(0,0,0,0.1);
        border: 1px solid #f8bbd0;
        border-radius: 8px;
        z-index: 1;
        margin-top: 5px;
    }

        .dropdown-content a {
            color: #be185d;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
            font-size: 14px;
            border-radius: 0;
        }

            .dropdown-content a:hover {
                background-color: #fdf2f8;
            }

    .dropdown.active .dropdown-content {
        display: block;
    }

    .avatar-img {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        object-fit: cover;
        margin-right: 8px;
    }

    .avatar {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background: #db2777;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        margin-right: 8px;
    }

</style>

<header>
    <a href="/" class="logo">MIRRORLY</a>

    <nav>
        <a href="/Index" class="@(ViewContext.RouteData.Values["page"]?.ToString() == "/Index" ? "active" : "")">TRANG CH·ª¶</a>
        @if (isLoggedIn) {
            <a href="/Mua/MuaProfiles" class="@(ViewContext.RouteData.Values["page"]?.ToString()?.Contains("Mua") == true ? "active" : "")">Th·ª£ trang ƒëi·ªÉm</a>
        } 
        else
        {
            <a href="/Auth/Login" class="@(ViewContext.RouteData.Values["page"]?.ToString()?.Contains("Mua") == true ? "active" : "")">Th·ª£ trang ƒëi·ªÉm</a>

        }

        <a href="/Head/Guide" class="@(ViewContext.RouteData.Values["page"]?.ToString() == "/Gallery" ? "active" : "")">H∆∞·ªõng d·∫´n</a>

        <a href="/Head/Support" class="@(ViewContext.RouteData.Values["page"]?.ToString() == "/Gallery" ? "active" : "")">H·ªó tr·ª£</a>

    </nav>

    <div class="right">
        <div class="search-box">
            <input type="text" placeholder="T√¨m ki·∫øm th·ª£ trang ƒëi·ªÉm..." />
        </div>

        @if (isLoggedIn)
        {
            <div class="user-menu">
                <div class="dropdown" id="userDropdown">
                    <div class="user-info" style="cursor: pointer;" onclick="toggleDropdown()">
                        @if (!string.IsNullOrEmpty(avatarUrl))
                        {
                            <img src="@avatarUrl" alt="Avatar" class="avatar-img" />
                        }
                        else
                        {
                            <div class="avatar">@((username ?? "U").Substring(0, 1).ToUpper())</div>
                        }
                        <span>@username</span>
                        @if (isMUA && !isVerified)
                        {
                            <span style="color: red; font-size: 12px; margin-left: 5px;">(!)</span>
                        }
                        <span>‚ñº</span>
                    </div>
                    <div class="dropdown-content" id="dropdownContent">
                        @if (isMUA)
                        {
                            <a href="/Profile/MuaProfile">üë§ H·ªì s∆° Artist</a>
                            <a href="/Books/ArtistBookings">üìÖ ƒê∆°n ƒë·∫∑t l·ªãch</a>
                            <a href="/Books/BookBySchedule">üìÖ Tu·∫ßn l√†m vi·ªác</a>

                            @if (!isVerified)
                            {
                                <a href="/Account/VerifyIdentity" style="color: red; font-weight: bold;">
                                    ‚úÖ X√°c minh danh t√≠nh
                                </a>
                            }
                        }
                        else if (isCustomer)
                        {
                            <a href="/Profile/CustomerProfile">üë§ H·ªì s∆° c√° nh√¢n</a>
                            <a href="/Books/BookingStatus">üìÖ L·ªãch ƒë·∫∑t c·ªßa t√¥i</a>
                        }
                        else if (isAdmin)
                        {
                            <a href="/Admin/Dashboard">üìÖ Qu·∫£n l√Ω trang</a>
                        }
                        <hr style="margin: 5px 0; border: none; border-top: 1px solid #f8bbd0;">
                        <a href="/Auth/ChangePassword">üîë Thay ƒë·ªïi m·∫≠t kh·∫©u</a>
                        <a href="/Auth/Logout">üö™ ƒêƒÉng xu·∫•t</a>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="auth-links">
                <a href="/Auth/Login" class="btn-login">ƒêƒÉng nh·∫≠p</a>
                <a href="/Auth/Register" class="btn-register">ƒêƒÉng k√Ω</a>
            </div>
        }
    </div>
</header>

<script>
    // Toggle dropdown menu
    function toggleDropdown() {
        const dropdown = document.getElementById('userDropdown');
        dropdown.classList.toggle('active');
    }

    // Close dropdown when clicking outside
    document.addEventListener('click', function(event) {
        const dropdown = document.getElementById('userDropdown');
        const userInfo = dropdown?.querySelector('.user-info');

        if (dropdown && !dropdown.contains(event.target)) {
            dropdown.classList.remove('active');
        }
    });

    // Close dropdown when clicking on menu items
    document.addEventListener('DOMContentLoaded', function() {
        const dropdownLinks = document.querySelectorAll('#dropdownContent a');
        dropdownLinks.forEach(link => {
            link.addEventListener('click', function() {
                const dropdown = document.getElementById('userDropdown');
                if (dropdown) {
                    dropdown.classList.remove('active');
                }
            });
        });
    });

    // Handle escape key to close dropdown
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            const dropdown = document.getElementById('userDropdown');
            if (dropdown) {
                dropdown.classList.remove('active');
            }
        }
    });
</script>