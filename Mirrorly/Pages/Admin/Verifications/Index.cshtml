@page "/Admin/Verifications"
@model Mirrorly.Pages.Admin.Verifications.IndexModel
@{
    ViewData["Title"] = "Quản lý xác minh danh tính";
    Layout = "~/Pages/Admin/_AdminLayout.cshtml";
}

<style>
    .verification-card {
        background: white;
        border: 1px solid #e2e8f0;
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 20px;
        transition: all 0.2s;
        position: relative;
        overflow: hidden;
    }

    .verification-card:hover {
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        transform: translateY(-2px);
    }

    .verification-header {
        display: flex;
        justify-content: between;
        align-items: flex-start;
        margin-bottom: 20px;
    }

    .user-info {
        flex: 1;
    }

    .user-name {
        font-size: 18px;
        font-weight: 600;
        color: #1e293b;
        margin-bottom: 5px;
    }

    .user-email {
        color: #64748b;
        font-size: 14px;
        margin-bottom: 8px;
    }

    .verification-status {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
    }

    .status-pending {
        background: #fef3c7;
        color: #92400e;
        border: 1px solid #fcd34d;
    }

    .status-approved {
        background: #dcfce7;
        color: #166534;
        border: 1px solid #86efac;
    }

    .status-rejected {
        background: #fee2e2;
        color: #991b1b;
        border: 1px solid #fca5a5;
    }

    .verification-details {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
        margin-bottom: 20px;
    }

    .detail-group {
        background: #f8fafc;
        padding: 15px;
        border-radius: 8px;
    }

    .detail-label {
        font-size: 12px;
        color: #6b7280;
        text-transform: uppercase;
        font-weight: 600;
        margin-bottom: 5px;
    }

    .detail-value {
        color: #374151;
        font-weight: 500;
    }

    .documents-section {
        margin: 20px 0;
    }

    .documents-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 15px;
    }

    .document-item {
        text-align: center;
        padding: 15px;
        background: #f8fafc;
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        position: relative;
    }

    .document-item img {
        max-width: 100%;
        max-height: 150px;
        border-radius: 6px;
        cursor: pointer;
        transition: transform 0.2s;
    }

    .document-item img:hover {
        transform: scale(1.05);
    }

    .document-label {
        font-size: 14px;
        font-weight: 600;
        color: #374151;
        margin-top: 10px;
    }

    .verification-actions {
        display: flex;
        gap: 10px;
        justify-content: flex-end;
        padding-top: 20px;
        border-top: 1px solid #e2e8f0;
    }

    .btn {
        padding: 8px 16px;
        border-radius: 6px;
        font-weight: 600;
        font-size: 14px;
        cursor: pointer;
        transition: all 0.2s;
        border: none;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 5px;
    }

    .btn-success {
        background: #10b981;
        color: white;
    }

    .btn-success:hover {
        background: #059669;
    }

    .btn-danger {
        background: #ef4444;
        color: white;
    }

    .btn-danger:hover {
        background: #dc2626;
    }

    .btn-secondary {
        background: #6b7280;
        color: white;
    }

    .btn-secondary:hover {
        background: #4b5563;
    }

    .btn-primary {
        background: #3b82f6;
        color: white;
    }

    .btn-primary:hover {
        background: #2563eb;
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #9ca3af;
    }

    .empty-icon {
        font-size: 64px;
        margin-bottom: 20px;
        color: #d1d5db;
    }

    .filter-tabs {
        display: flex;
        gap: 20px;
        margin-bottom: 30px;
        border-bottom: 2px solid #e2e8f0;
    }

    .filter-tab {
        padding: 10px 20px;
        background: none;
        border: none;
        border-bottom: 2px solid transparent;
        cursor: pointer;
        font-weight: 600;
        color: #6b7280;
        transition: all 0.2s;
    }

    .filter-tab.active {
        color: #3b82f6;
        border-bottom-color: #3b82f6;
    }

    .filter-tab:hover {
        color: #3b82f6;
    }

    .stats-bar {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: white;
        padding: 20px;
        border-radius: 12px;
        border: 1px solid #e2e8f0;
        text-align: center;
    }

    .stat-number {
        font-size: 32px;
        font-weight: 700;
        color: #1e293b;
        margin-bottom: 5px;
    }

    .stat-label {
        font-size: 14px;
        color: #6b7280;
        font-weight: 500;
    }

    .pending {
        border-left: 4px solid #f59e0b;
    }

    .approved {
        border-left: 4px solid #10b981;
    }

    .rejected {
        border-left: 4px solid #ef4444;
    }

    /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.8);
        z-index: 10000;
        align-items: center;
        justify-content: center;
    }

    .modal.active {
        display: flex;
    }

    .modal-content {
        max-width: 90%;
        max-height: 90%;
        position: relative;
    }

    .modal-image {
        max-width: 100%;
        max-height: 100%;
        border-radius: 8px;
    }

    .modal-close {
        position: absolute;
        top: -40px;
        right: 0;
        background: white;
        border: none;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        cursor: pointer;
        font-weight: bold;
    }

    .processing-form {
        background: #f8fafc;
        padding: 20px;
        border-radius: 8px;
        margin-top: 15px;
        border: 1px solid #e2e8f0;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: 600;
        color: #374151;
    }

    .form-control {
        width: 100%;
        padding: 8px 12px;
        border: 1px solid #d1d5db;
        border-radius: 6px;
        font-size: 14px;
    }

    .form-control:focus {
        outline: none;
        border-color: #3b82f6;
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    }

</style>

<!-- Statistics Bar -->
<div class="stats-bar">
    <div class="stat-card">
        <div class="stat-number">@Model.TotalPending</div>
        <div class="stat-label">Chờ duyệt</div>
    </div>
    <div class="stat-card">
        <div class="stat-number">@Model.TotalApproved</div>
        <div class="stat-label">Đã duyệt</div>
    </div>
    <div class="stat-card">
        <div class="stat-number">@Model.TotalRejected</div>
        <div class="stat-label">Từ chối</div>
    </div>
    <div class="stat-card">
        <div class="stat-number">@(Model.TotalPending + Model.TotalApproved + Model.TotalRejected)</div>
        <div class="stat-label">Tổng cộng</div>
    </div>
</div>

<!-- Filter Tabs -->
<div class="filter-tabs">
    <button class="filter-tab @(Model.CurrentFilter == "all" ? "active" : "")" 
            onclick="filterVerifications('all')">
        Tất cả (@(Model.TotalPending + Model.TotalApproved + Model.TotalRejected))
    </button>
    <button class="filter-tab @(Model.CurrentFilter == "pending" ? "active" : "")" 
            onclick="filterVerifications('pending')">
        🟡 Chờ duyệt (@Model.TotalPending)
    </button>
    <button class="filter-tab @(Model.CurrentFilter == "approved" ? "active" : "")" 
            onclick="filterVerifications('approved')">
        🟢 Đã duyệt (@Model.TotalApproved)
    </button>
    <button class="filter-tab @(Model.CurrentFilter == "rejected" ? "active" : "")" 
            onclick="filterVerifications('rejected')">
        🔴 Từ chối (@Model.TotalRejected)
    </button>
</div>

<!-- Verification Cards -->
<div class="verifications-container">
    @if (!Model.Verifications.Any())
    {
        <div class="empty-state">
            <div class="empty-icon">📄</div>
            <h3 style="color: #6b7280; margin-bottom: 10px;">Không có yêu cầu xác minh nào</h3>
            <p>Chưa có MUA nào gửi yêu cầu xác minh danh tính</p>
        </div>
    }
    else
    {
        @foreach (var verification in Model.Verifications)
        {
            <div class="verification-card @(verification.Status == 0 ? "pending" : verification.Status == 1 ? "approved" : "rejected")">
                <!-- Header -->
                <div class="verification-header">
                    <div class="user-info">
                        <div class="user-name">@verification.User.FullName</div>
                        <div class="user-email">@verification.User.Email</div>
                        <div style="font-size: 12px; color: #9ca3af;">
                            Gửi yêu cầu: @verification.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                        </div>
                    </div>
                    <div>
                        <div class="verification-status @(verification.Status == 0 ? "status-pending" : verification.Status == 1 ? "status-approved" : "status-rejected")">
                            @(verification.Status == 0 ? "⏳ Chờ duyệt" : verification.Status == 1 ? "✅ Đã duyệt" : "❌ Từ chối")
                        </div>
                        @if (verification.Status != 0)
                        {
                            <div style="font-size: 12px; color: #6b7280; text-align: center; margin-top: 5px;">
                                @verification.ProcessedAt?.ToString("dd/MM/yyyy HH:mm")
                            </div>
                        }
                    </div>
                </div>

                <!-- Personal Details -->
                <div class="verification-details">
                    <div class="detail-group">
                        <div class="detail-label">Họ tên trên CMND/CCCD</div>
                        <div class="detail-value">@verification.FullName</div>
                    </div>
                    <div class="detail-group">
                        <div class="detail-label">Số CMND/CCCD</div>
                        <div class="detail-value">@verification.IdNumber</div>
                    </div>
                    <div class="detail-group">
                        <div class="detail-label">Ngày sinh</div>
                        <div class="detail-value">@verification.DateOfBirth.ToString("dd/MM/yyyy")</div>
                    </div>
                    <div class="detail-group">
                        <div class="detail-label">Địa chỉ</div>
                        <div class="detail-value">@verification.Address</div>
                    </div>
                </div>

                <!-- Documents -->
                <div class="documents-section">
                    <h4 style="color: #374151; margin-bottom: 15px;">📄 Tài liệu đính kèm</h4>
                    <div class="documents-grid">
                        <div class="document-item">
                            <img src="@verification.FrontIdImageUrl" alt="Mặt trước CMND/CCCD" 
                                 onclick="showImageModal('@verification.FrontIdImageUrl', 'Mặt trước CMND/CCCD')" />
                            <div class="document-label">Mặt trước CMND/CCCD</div>
                        </div>
                        <div class="document-item">
                            <img src="@verification.BackIdImageUrl" alt="Mặt sau CMND/CCCD" 
                                 onclick="showImageModal('@verification.BackIdImageUrl', 'Mặt sau CMND/CCCD')" />
                            <div class="document-label">Mặt sau CMND/CCCD</div>
                        </div>
                        @if (!string.IsNullOrEmpty(verification.SelfieImageUrl))
                        {
                            <div class="document-item">
                                <img src="@verification.SelfieImageUrl" alt="Ảnh selfie" 
                                     onclick="showImageModal('@verification.SelfieImageUrl', 'Ảnh selfie cầm CMND/CCCD')" />
                                <div class="document-label">Ảnh selfie</div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Admin Notes (if processed) -->
                @if (!string.IsNullOrEmpty(verification.AdminNotes))
                {
                    <div style="background: #fffbeb; padding: 15px; border-radius: 8px; border: 1px solid #fcd34d; margin: 15px 0;">
                        <div style="color: #92400e; font-weight: 600; margin-bottom: 5px;">📝 Ghi chú của admin:</div>
                        <div style="color: #92400e;">@verification.AdminNotes</div>
                        @if (verification.ProcessedByAdmin != null)
                        {
                            <div style="color: #6b7280; font-size: 12px; margin-top: 8px;">
                                Được xử lý bởi: @verification.ProcessedByAdmin.Username
                            </div>
                        }
                    </div>
                }

                <!-- Processing Form (for pending verifications) -->
                @if (verification.Status == 0)
                {
                    <div class="processing-form" id="form-@verification.VerificationId" style="display: none;">
                        <form method="post" asp-page-handler="ProcessVerification">
                            <input type="hidden" name="verificationId" value="@verification.VerificationId" />
                            
                            <div class="form-group">
                                <label>Ghi chú (tùy chọn)</label>
                                <textarea name="adminNotes" class="form-control" rows="3" 
                                          placeholder="Nhập ghi chú về quyết định của bạn..."></textarea>
                            </div>
                            
                            <div style="display: flex; gap: 10px; justify-content: flex-end;">
                                <button type="button" onclick="hideProcessingForm(@verification.VerificationId)" 
                                        class="btn btn-secondary">Hủy</button>
                                <button type="submit" name="approved" value="false" 
                                        class="btn btn-danger">❌ Từ chối</button>
                                <button type="submit" name="approved" value="true" 
                                        class="btn btn-success">✅ Duyệt</button>
                            </div>
                        </form>
                    </div>
                }

                <!-- Actions -->
                <div class="verification-actions">
                    <a href="/Admin/Users/Details/@verification.UserId" class="btn btn-secondary">
                        👤 Xem hồ sơ user
                    </a>
                    
                    @if (verification.Status == 0)
                    {
                        <button onclick="showProcessingForm(@verification.VerificationId)" class="btn btn-primary">
                            ⚖️ Xử lý yêu cầu
                        </button>
                    }
                    else
                    {
                        <span style="color: #6b7280; font-size: 14px;">
                            Đã xử lý bởi @(verification.ProcessedByAdmin?.Username ?? "System")
                        </span>
                    }
                </div>
            </div>
        }
    }
</div>

<!-- Image Modal -->
<div class="modal" id="imageModal" onclick="hideImageModal()">
    <div class="modal-content" onclick="event.stopPropagation()">
        <button class="modal-close" onclick="hideImageModal()">×</button>
        <img class="modal-image" id="modalImage" src="" alt="">
        <div style="text-align: center; color: white; margin-top: 10px; font-weight: 600;" id="modalTitle"></div>
    </div>
</div>

<script>
    function filterVerifications(status) {
        window.location.href = `/Admin/Verifications?filter=${status}`;
    }

    function showProcessingForm(verificationId) {
        const form = document.getElementById(`form-${verificationId}`);
        if (form) {
            form.style.display = 'block';
            form.scrollIntoView({ behavior: 'smooth' });
        }
    }

    function hideProcessingForm(verificationId) {
        const form = document.getElementById(`form-${verificationId}`);
        if (form) {
            form.style.display = 'none';
        }
    }

    function showImageModal(imageUrl, title) {
        const modal = document.getElementById('imageModal');
        const modalImage = document.getElementById('modalImage');
        const modalTitle = document.getElementById('modalTitle');
        
        modalImage.src = imageUrl;
        modalTitle.textContent = title;
        modal.classList.add('active');
        
        // Prevent body scroll
        document.body.style.overflow = 'hidden';
    }

    function hideImageModal() {
        const modal = document.getElementById('imageModal');
        modal.classList.remove('active');
        
        // Restore body scroll
        document.body.style.overflow = 'auto';
    }

    // Keyboard support for modal
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            hideImageModal();
        }
    });

    // Auto-refresh for pending verifications
    @if (Model.TotalPending > 0)
    {
        <text>
        setInterval(() => {
            // Only refresh if we're on pending tab and there are pending items
            if (window.location.search.includes('filter=pending') || !window.location.search.includes('filter=')) {
                // Subtle refresh notification
                const notification = document.createElement('div');
                notification.style.cssText = `
                    position: fixed; bottom: 20px; right: 20px; z-index: 9999;
                    background: #3b82f6; color: white; padding: 12px 20px;
                    border-radius: 8px; font-size: 14px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                `;
                notification.innerHTML = `
                    🔄 Kiểm tra yêu cầu mới... 
                    <button onclick="location.reload()" style="background: none; border: 1px solid white; color: white; margin-left: 10px; padding: 4px 8px; border-radius: 4px; cursor: pointer;">Tải lại</button>
                `;
                document.body.appendChild(notification);
                
                setTimeout(() => {
                    if (notification.parentNode) notification.remove();
                }, 5000);
            }
        }, 60000); // Check every minute
        </text>
    }
</script>