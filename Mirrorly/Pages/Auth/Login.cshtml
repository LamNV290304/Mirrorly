@page "/Auth/Login"
@model Mirrorly.Pages.Auth.LoginModel
@{
    ViewData["Title"] = "Đăng nhập";
}

<style>
    .auth-container {
        max-width: 450px;
        margin: 50px auto;
        padding: 30px;
        background: #ffffff;
        border-radius: 16px;
        box-shadow: 0 4px 20px rgba(248, 187, 208, 0.2);
        border: 1px solid #f8bbd0;
    }

    .auth-title {
        text-align: center;
        color: #db2777;
        margin-bottom: 30px;
        font-size: 28px;
        font-weight: 600;
    }

    .login-steps {
        display: flex;
        justify-content: center;
        margin-bottom: 30px;
    }

    .step {
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 8px 16px;
        background: #f8fafc;
        border-radius: 20px;
        font-size: 14px;
        color: #64748b;
    }

    .step.active {
        background: #eff6ff;
        color: #3b82f6;
        font-weight: 600;
    }

    .step.completed {
        background: #ecfdf5;
        color: #059669;
    }

    .form-section {
        display: none;
    }

    .form-section.active {
        display: block;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-group label {
        display: block;
        margin-bottom: 8px;
        color: #be185d;
        font-weight: 500;
    }

    .form-control {
        width: 100%;
        padding: 12px 16px;
        border: 1px solid #f8bbd0;
        border-radius: 8px;
        font-size: 14px;
        transition: border-color 0.2s, box-shadow 0.2s;
    }

    .form-control:focus {
        outline: none;
        border-color: #db2777;
        box-shadow: 0 0 8px rgba(219, 39, 119, 0.2);
    }

    .btn-primary {
        width: 100%;
        padding: 12px;
        background: #db2777;
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: background 0.2s;
    }

    .btn-primary:hover {
        background: #be185d;
    }

    .btn-primary:disabled {
        background: #9ca3af;
        cursor: not-allowed;
    }

    .text-danger {
        color: #dc2626;
        font-size: 14px;
        margin-top: 5px;
    }

    .text-success {
        color: #059669;
        font-size: 14px;
        margin-top: 5px;
    }

    .auth-links {
        text-align: center;
        margin-top: 20px;
    }

    .auth-links a {
        color: #db2777;
        text-decoration: none;
    }

    .auth-links a:hover {
        text-decoration: underline;
    }

    /* 2FA Code Inputs */
    .code-inputs {
        display: flex;
        justify-content: center;
        gap: 8px;
        margin: 20px 0;
    }

    .code-input {
        width: 45px;
        height: 45px;
        text-align: center;
        border: 2px solid #f8bbd0;
        border-radius: 8px;
        font-size: 18px;
        font-weight: 700;
        color: #1e293b;
    }

    .code-input:focus {
        outline: none;
        border-color: #db2777;
        box-shadow: 0 0 8px rgba(219, 39, 119, 0.2);
    }

    .backup-link {
        text-align: center;
        margin-top: 15px;
    }

    .backup-link button {
        background: none;
        border: none;
        color: #6b7280;
        text-decoration: underline;
        cursor: pointer;
        font-size: 14px;
    }

    .backup-link button:hover {
        color: #db2777;
    }

    .backup-form {
        display: none;
        text-align: center;
    }

    .backup-form.active {
        display: block;
    }

    .security-notice {
        background: #fef3c7;
        border: 1px solid #fcd34d;
        border-radius: 8px;
        padding: 15px;
        margin: 20px 0;
        text-align: center;
    }

    .security-notice-title {
        color: #92400e;
        font-weight: 600;
        margin-bottom: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

    .security-notice-text {
        color: #92400e;
        font-size: 14px;
    }

    .loading-spinner {
        display: inline-block;
        width: 20px;
        height: 20px;
        border: 2px solid #f3f3f3;
        border-top: 2px solid #db2777;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin-right: 10px;
    }

</style>

<div class="auth-container">
    <h1 class="auth-title">Đăng nhập</h1>
    
    @if (Model.RequiresTwoFactor)
    {
        <!-- 2FA Step Indicator -->
        <div class="login-steps">
            <div class="step completed">
                <span>✅</span>
                <span>Mật khẩu</span>
            </div>
            <div style="margin: 0 10px; color: #d1d5db;">→</div>
            <div class="step active">
                <span>🔐</span>
                <span>2FA</span>
            </div>
        </div>

        <div class="security-notice">
            <div class="security-notice-title">
                <span>🛡️</span>
                <span>Xác thực hai yếu tố</span>
            </div>
            <div class="security-notice-text">
                Nhập mã 6 chữ số từ ứng dụng authenticator của bạn
            </div>
        </div>
    }

    <form method="post" id="loginForm">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="text-success">@TempData["SuccessMessage"]</div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="text-danger">@TempData["ErrorMessage"]</div>
        }

        <!-- Basic Login Form -->
        <div class="form-section @(Model.RequiresTwoFactor ? "" : "active")" id="basic-login">
            <div class="form-group">
                <label asp-for="Email">Email</label>
                <input asp-for="Email" class="form-control" type="email" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="Password">Mật khẩu</label>
                <input asp-for="Password" class="form-control" type="password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            
            <button type="submit" class="btn-primary" formaction="/Auth/Login?handler=BasicLogin">
                <span class="login-text">Đăng nhập</span>
                <span class="loading-spinner" style="display: none;"></span>
            </button>
        </div>

        <!-- 2FA Verification Form -->
        <div class="form-section @(Model.RequiresTwoFactor ? "active" : "")" id="twofa-login">
            <div class="form-group">
                <label>Mã xác thực 6 chữ số</label>
                <div class="code-inputs">
                    <input type="text" maxlength="1" class="code-input" onkeyup="moveToNext(this, 1)" oninput="this.value = this.value.replace(/[^0-9]/g, '')">
                    <input type="text" maxlength="1" class="code-input" onkeyup="moveToNext(this, 2)" oninput="this.value = this.value.replace(/[^0-9]/g, '')">
                    <input type="text" maxlength="1" class="code-input" onkeyup="moveToNext(this, 3)" oninput="this.value = this.value.replace(/[^0-9]/g, '')">
                    <input type="text" maxlength="1" class="code-input" onkeyup="moveToNext(this, 4)" oninput="this.value = this.value.replace(/[^0-9]/g, '')">
                    <input type="text" maxlength="1" class="code-input" onkeyup="moveToNext(this, 5)" oninput="this.value = this.value.replace(/[^0-9]/g, '')">
                    <input type="text" maxlength="1" class="code-input" onkeyup="moveToNext(this, 6)" oninput="this.value = this.value.replace(/[^0-9]/g, '')">
                </div>
                <input type="hidden" name="TwoFactorCode" id="two-factor-code" />
            </div>

            <button type="submit" class="btn-primary" onclick="collect2FACode()" formaction="/Auth/Login?handler=TwoFactorLogin">
                Xác minh và Đăng nhập
            </button>

            <div class="backup-link">
                <button type="button" onclick="showBackupForm()">
                    Không có ứng dụng authenticator? Sử dụng recovery code
                </button>
            </div>

            <!-- Backup Code Form -->
            <div class="backup-form" id="backup-form">
                <div class="form-group">
                    <label>Recovery Code</label>
                    <input type="text" name="BackupCode" class="form-control" placeholder="Nhập 8 chữ số recovery code" maxlength="8" />
                </div>
                <button type="submit" class="btn-primary" formaction="/Auth/Login?handler=BackupCodeLogin">
                    Đăng nhập bằng Recovery Code
                </button>
                <div style="text-align: center; margin-top: 10px;">
                    <button type="button" onclick="showAuthenticatorForm()" style="background: none; border: none; color: #6b7280; text-decoration: underline; font-size: 14px;">
                        ← Quay lại nhập mã authenticator
                    </button>
                </div>
            </div>
        </div>

        <!-- Hidden fields to maintain state -->
        @if (Model.RequiresTwoFactor)
        {
            <input type="hidden" asp-for="Email" />
            <input type="hidden" asp-for="TempUserId" />
        }
        
        <div class="auth-links">
            <p>Chưa có tài khoản? <a href="/Auth/Register">Đăng ký ngay</a></p>
            <p><a href="/Auth/ForgotPassword">Quên mật khẩu?</a></p>
        </div>
    </form>
</div>

<script>
    // 2FA Code Input Handling
    function moveToNext(current, position) {
        if (current.value.length === 1 && position < 6) {
            current.nextElementSibling.focus();
        }
        if (position === 6 && current.value.length === 1) {
            collect2FACode();
        }
        
        // Auto-submit when all 6 digits entered
        const inputs = document.querySelectorAll('.code-input');
        let allFilled = true;
        inputs.forEach(input => {
            if (input.value.length !== 1) allFilled = false;
        });
        
        if (allFilled) {
            setTimeout(() => {
                collect2FACode();
                document.querySelector('button[formaction*="TwoFactorLogin"]').click();
            }, 300);
        }
    }

    function collect2FACode() {
        const inputs = document.querySelectorAll('.code-input');
        let code = '';
        inputs.forEach(input => {
            code += input.value;
        });
        document.getElementById('two-factor-code').value = code;
    }

    function showBackupForm() {
        document.querySelector('.code-inputs').parentElement.style.display = 'none';
        document.querySelector('button[formaction*="TwoFactorLogin"]').style.display = 'none';
        document.querySelector('.backup-link').style.display = 'none';
        document.getElementById('backup-form').classList.add('active');
    }

    function showAuthenticatorForm() {
        document.querySelector('.code-inputs').parentElement.style.display = 'block';
        document.querySelector('button[formaction*="TwoFactorLogin"]').style.display = 'block';
        document.querySelector('.backup-link').style.display = 'block';
        document.getElementById('backup-form').classList.remove('active');
    }

    // Show loading on form submit
    document.getElementById('loginForm').addEventListener('submit', function() {
        const button = document.querySelector('button[type="submit"]:focus');
        if (button) {
            button.disabled = true;
            const spinner = button.querySelector('.loading-spinner');
            const text = button.querySelector('.login-text');
            if (spinner && text) {
                spinner.style.display = 'inline-block';
                text.textContent = 'Đang xử lý...';
            }
        }
    });

    // Auto-focus first input when 2FA section is active
    document.addEventListener('DOMContentLoaded', function() {
        const twofaSection = document.getElementById('twofa-login');
        if (twofaSection && twofaSection.classList.contains('active')) {
            const firstInput = twofaSection.querySelector('.code-input');
            if (firstInput) firstInput.focus();
        }
    });
</script>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}